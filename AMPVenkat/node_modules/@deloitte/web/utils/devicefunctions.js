const assert = require('assert')
const allobjectrepo = require('/Users/vencs/Documents/AMP/Training/test/ObjectRepo/allobjectrepo.js')
// const apponboarding = require('./apponboarding')
const platform = process.env.platform

const isDisplayed = async (ele) => {
  let locator;
  switch (platform) {
    case 'ios':
      locator = allPageObjects.allPageiOS[ele];
      break;

    case 'android':
      locator = allPageObjects.allPageAndroid[ele];
      break;

    default:
      logger.fatal('platform specified doesnt match with ios or android');
      break;
  }
  logger.info(`Verifying if locator is displayed - ${locator}`);
  await $(locator).then(async (element) => {
    await isDisplayedAttribute(element, ele);
  })
};
const isDisplayedAttribute = async (element, ele) => {
  let value = false;
  const locatorDisplayed = await element.isDisplayed();
  const locatorEnabled = await element.isEnabled();
  await browser.waitUntil(async () => (locatorDisplayed || locatorEnabled) === true, elementTimeOut).then((val) => {
    logger.info(`Pass: ${ele} is displayed - `, val);
    value = val;
  }).catch((err) => {
    msg = `Fail: ${ele} is not displayed due to ${err}`;
    logger.error(msg);
    assert.fail(msg);
  });
  return value;
};

module.exports = {
  isDisplayed,
  isDisplayedAttribute
}